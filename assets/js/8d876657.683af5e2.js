"use strict";(self.webpackChunkdocumentation_technology=self.webpackChunkdocumentation_technology||[]).push([[5617],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,c=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=l(n),m=i,g=p["".concat(s,".").concat(m)]||p[m]||f[m]||c;return n?r.createElement(g,o(o({ref:t},u),{},{components:n})):r.createElement(g,o({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var c=n.length,o=new Array(c);o[0]=p;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:i,o[1]=a;for(var l=2;l<c;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3936:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return s},metadata:function(){return l},assets:function(){return u},toc:function(){return f},default:function(){return m}});var r=n(7462),i=n(3366),c=(n(7294),n(3905)),o=["components"],a={sidebar_position:3},s="Exchange 2016",l={unversionedId:"assigning-certificate-to-services/exchange-2016",id:"assigning-certificate-to-services/exchange-2016",title:"Exchange 2016",description:"A carbon copy of Exchange 2013.",source:"@site/SSL-Certificates/assigning-certificate-to-services/exchange-2016.md",sourceDirName:"assigning-certificate-to-services",slug:"/assigning-certificate-to-services/exchange-2016",permalink:"/SSL-Certificates/assigning-certificate-to-services/exchange-2016",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Exchange 2013",permalink:"/SSL-Certificates/assigning-certificate-to-services/exchange-2013"},next:{title:"Exchange 2019",permalink:"/SSL-Certificates/assigning-certificate-to-services/exchange-2019"}},u={},f=[{value:"<code>Get-SendConnector | fl</code>",id:"get-sendconnector--fl",level:4},{value:"<code>Get-SendConnector | fl</code>",id:"get-sendconnector--fl-1",level:4},{value:"<code>Enable-ExchangeCertificate &quot;&lt;insert thumbprint&gt;&quot; -services SMTP</code>",id:"enable-exchangecertificate-insert-thumbprint--services-smtp",level:4},{value:"<code>Get-ReceiveConnector | fl</code>",id:"get-receiveconnector--fl",level:4}],p={toc:f};function m(e){var t=e.components,n=(0,i.Z)(e,o);return(0,c.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"exchange-2016"},"Exchange 2016"),(0,c.kt)("p",null,"A carbon copy of Exchange 2013."),(0,c.kt)("p",null,"The next steps we are going to do using Exchange powershell."),(0,c.kt)("ol",null,(0,c.kt)("li",{parentName:"ol"},"Open up Exchange Management Shell as administrator"),(0,c.kt)("li",{parentName:"ol"},"Check what certificate the send connector is using by issuing the command below: (make note of the send connector name)\n")),(0,c.kt)("h4",{id:"get-sendconnector--fl"},(0,c.kt)("inlineCode",{parentName:"h4"},"Get-SendConnector | fl")),(0,c.kt)("ol",{start:3},(0,c.kt)("li",{parentName:"ol"},"Get the thumbprint of the new certificate that you've just imported:\n",(0,c.kt)("inlineCode",{parentName:"li"},"Get-ExchangeCertificate | fl ")),(0,c.kt)("li",{parentName:"ol"},"Make note of the thumbprint and issue the following commands:")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},'$certificate = Get-ExchangeCertificate -Thumbprint "<insert thumbprint>"\n$tlscertificatename = "<i>$($certificate.Issuer)<s>$($certificate.Subject)"\nSet-SendConnector "Name of Send connector" -TlsCertificateName $tlscertificatename\n')),(0,c.kt)("ol",{start:5},(0,c.kt)("li",{parentName:"ol"},"Confirm that the commands you have just run were successful, by issuing the following command:")),(0,c.kt)("h4",{id:"get-sendconnector--fl-1"},(0,c.kt)("inlineCode",{parentName:"h4"},"Get-SendConnector | fl")),(0,c.kt)("ol",{start:6},(0,c.kt)("li",{parentName:"ol"},"Enable the certificate with SMTP services using the command below:")),(0,c.kt)("h4",{id:"enable-exchangecertificate-insert-thumbprint--services-smtp"},(0,c.kt)("inlineCode",{parentName:"h4"},'Enable-ExchangeCertificate "<insert thumbprint>" -services SMTP')),(0,c.kt)("ol",{start:7},(0,c.kt)("li",{parentName:"ol"},"Repeat the above steps, incase you have any receive connectors that are using TLS:")),(0,c.kt)("h4",{id:"get-receiveconnector--fl"},(0,c.kt)("inlineCode",{parentName:"h4"},"Get-ReceiveConnector | fl")))}m.isMDXComponent=!0}}]);