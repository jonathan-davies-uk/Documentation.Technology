"use strict";(self.webpackChunkdocumentation_technology=self.webpackChunkdocumentation_technology||[]).push([[1984],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),u=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=u(r),d=o,y=m["".concat(i,".").concat(d)]||m[d]||p[d]||a;return r?n.createElement(y,s(s({ref:t},l),{},{components:r})):n.createElement(y,s({ref:t},l))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:o,s[1]=c;for(var u=2;u<a;u++)s[u]=r[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},515:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return i},metadata:function(){return u},assets:function(){return l},toc:function(){return p},default:function(){return d}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),s=["components"],c={sidebar_position:2},i="Restore keys and secrets from an encrypted VM",u={unversionedId:"azure/restore/restore-keys-and-secrets-from-vm",id:"azure/restore/restore-keys-and-secrets-from-vm",title:"Restore keys and secrets from an encrypted VM",description:"1. Get key and secret from backup",source:"@site/Backups/azure/restore/restore-keys-and-secrets-from-vm.md",sourceDirName:"azure/restore",slug:"/azure/restore/restore-keys-and-secrets-from-vm",permalink:"/Backups/azure/restore/restore-keys-and-secrets-from-vm",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Restore files from a VM",permalink:"/Backups/azure/restore/restore-files-from-vm"},next:{title:"Guest agent certificate not found",permalink:"/Backups/azure/troubleshooting/guest-agent-certificate-not-found"}},l={},p=[{value:"1. Get key and secret from backup",id:"1-get-key-and-secret-from-backup",level:2},{value:"Restore Key",id:"restore-key",level:2},{value:"Restore Secret",id:"restore-secret",level:2},{value:"Create VM for restored disks",id:"create-vm-for-restored-disks",level:2}],m={toc:p};function d(e){var t=e.components,r=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"restore-keys-and-secrets-from-an-encrypted-vm"},"Restore keys and secrets from an encrypted VM"),(0,a.kt)("h2",{id:"1-get-key-and-secret-from-backup"},"1. Get key and secret from backup"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Connect to Azure via PowerShell"),(0,a.kt)("li",{parentName:"ol"},"Issue the following commands:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'#Select the VM\n#vault = Get-AzRecoveryServicesVault -Name "restorevault" -ResourceGroupName "resource-group"\n$container = Get-AzRecoveryServicesBackupContainer -ContainerType "AzureVM" -Status "Registered" -FriendlyName "Restore-VM" -VaultId $vault.ID\n$backupitem = Get-AzRecoveryServicesBackupItem -Container $container -WorkloadType "AzureVM" -VaultId $vault.ID\n\n#Choose a recovery point\n$startdate = (Get-Date).AddDays(-28)\n$enddate = Get-Date\n$recoverypoint = Get-AzRecoveryServicesBackupRecoveryPoint -Item $backupitem -StartDate $startdate.ToUniversalTime() -EndDate $enddate.ToUniversalTime() -VaultId $vault.ID\n$recoverypoint[0]\n\n#Restore the disk\n$restorejob = Restore-AzRecoveryServicesBackupItem -RecoveryPoint $recoverypoint[0] -StorageAccountName "DestAccount" -StorageAccountResourceGroupName "DestRG" -VaultId $vault.ID\n$restorejob\n\n#Restore managed disks\n$restore = Get-AzRecoveryServicesBackupJob -Job $restorejob -VaultId $vault.ID\n$details = Get-AzRecoveryServicesBackupJobDetail -Job $restorejob -VaultId $vault.ID\n\n#Restore selective disks\n$restore = Restore-AzRecoveryServicesBackupItem -RecoveryPoint $recoverypoint[0] -StorageAccountName "DestAccount" -StorageAccountResourceGroupName "DestRG" -TargetResourceGroupName "DestRGforManagedDisks" -VaultId $vault.ID -VaultLocation $vault.Location -RestoreToSecondaryRegion -RestoreOnlyOSDisk\n\n#Cross-zonal restore\n$restore = Restore-AzRecoveryServicesBackupItem -RecoveryPoint $recoverypoint[0] -StorageAccountName "DestAccount" -StorageAccountResourceGroupName "DestRG" -VaultId $vault.ID -TargetZoneNumber 3\n')),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"For this instance, we'll be using the Restore managed disk, above. Issue the following commands:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$properties = $details.properties\n$storageAccountName = $properties[\"Target Storage Account Name\"]\n$containerName = $properties[\"Config Blob Container Name\"]\n$encryptedBlobName = $properties[\"Encryption Info Blob Name\"]\n\nSet-AzCurrentStorageAccount -Name $storageAccountName -ResourceGroupName 'resourcegroup-name'\nGet-AzStorageBlobContent -Blob $encryptedBlobName -Container $containerName -Destination 'C:\\vmencryption_config.json'\n$encryptionObject = Get-Content -Path 'C:\\vmencryption_config.json' | ConvertFrom-Json\n")),(0,a.kt)("h2",{id:"restore-key"},"Restore Key"),(0,a.kt)("p",null,"Issue the following commands:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$keyDestination = 'C:\\keyDetails.blob'\n[io.file]::WriteAllBytes($keyDestination, [System.Convert]::FromBase64String($encryptionObject.OsDiskKeyAndSecretDetails.KeyBackupData))\nRestore-AzureKeyVaultKey -VaultName 'target-vault' -InputFile $keyDestination\n")),(0,a.kt)("h2",{id:"restore-secret"},"Restore Secret"),(0,a.kt)("p",null,"Issue the following commands:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$secretdata = $encryptionObject.OsDiskKeyAndSecretDetails.SecretData\n$Secret = ConvertTo-SecureString -String $secretdata -AsPlainText -Force\n$secretname = 'B3284AAA-DAAA-4AAA-B393-60CAA848AAAA'\n$Tags = @{'DiskEncryptionKeyEncryptionAlgorithm' = 'RSA-OAEP';'DiskEncryptionKeyFileName' = 'B3284AAA-DAAA-4AAA-B393-60CAA848AAAA.BEK';'DiskEncryptionKeyEncryptionKeyURL' = $encryptionObject.OsDiskKeyAndSecretDetails.KeyUrl;'MachineName' = 'vm-name'}\nSet-AzureKeyVaultSecret -VaultName 'target-vault' -Name $secretname -SecretValue $Secret -ContentType 'Wrapped BEK' -Tags $Tags\n")),(0,a.kt)("h2",{id:"create-vm-for-restored-disks"},"Create VM for restored disks"),(0,a.kt)("p",null,"From here you can go ahead and create a virtual machine from the restored, encrypted disk."),(0,a.kt)("h2",{id:""}))}d.isMDXComponent=!0}}]);